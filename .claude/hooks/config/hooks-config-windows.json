{
  "hooks": {
    "SessionStart": [{
      "hooks": [{
        "type": "command",
        "command": "%USERPROFILE%\\.claude\\hooks\\cai\\workflow\\state-initializer.sh",
        "id": "cai-state-initializer"
      }]
    }],
    "UserPromptSubmit": [{
      "matcher": "cai/atdd|acceptance-designer|test-first-developer|solution-architect|business-analyst|user-experience-designer|technical-stakeholder|security-expert|legal-compliance-advisor|atdd-orchestrator",
      "hooks": [{
        "type": "command",
        "command": "python \"%USERPROFILE%\\.claude\\hooks\\cai\\workflow\\context-isolator.py\"",
        "id": "cai-context-isolator"
      }]
    }],
    "PreToolUse": [{
      "matcher": "Read",
      "condition": "cai-workflow-active",
      "hooks": [{
        "type": "command",
        "command": "\"%USERPROFILE%\\.claude\\hooks\\cai\\workflow\\input-validator.sh\"",
        "id": "cai-input-validator"
      }]
    }],
    "PostToolUse": [{
      "matcher": "Write|Edit",
      "condition": "cai-workflow-active",
      "hooks": [{
        "type": "command",
        "command": "python \"%USERPROFILE%\\.claude\\hooks\\cai\\workflow\\output-monitor.py\"",
        "id": "cai-output-monitor"
      }]
    }, {
      "matcher": "Write",
      "condition": "cai-workflow-active",
      "hooks": [{
        "type": "command",
        "command": "\"%USERPROFILE%\\.claude\\hooks\\cai\\workflow\\stage-transition.sh\"",
        "id": "cai-stage-transition"
      }]
    }, {
      "matcher": "Write|Edit|MultiEdit",
      "hooks": [{
        "type": "command",
        "command": "powershell.exe -Command \"$input = $input | Out-String; $json = $input | ConvertFrom-Json; $filePath = $json.tool_input.file_path; if ($filePath) { & '%USERPROFILE%\\.claude\\hooks\\cai\\code-quality\\lint-format.bat' $filePath }\"",
        "id": "cai-auto-lint-format-windows",
        "description": "Auto-lint and format source files based on language (Windows)"
      }]
    }]
  },
  "permissions": {
    "allow": [
      "Bash(%USERPROFILE%\\.claude\\hooks\\cai\\**)",
      "Read(docs/craft-ai/**)",
      "Write(docs/craft-ai/**)",
      "Edit(docs/craft-ai/**)",
      "Read(state/craft-ai/**)",
      "Write(state/craft-ai/**)",
      "Read(.claude/agents/cai/**)",
      "Write(state/craft-ai/*.log)",
      "Write(state/craft-ai/*.json)"
    ]
  }
}