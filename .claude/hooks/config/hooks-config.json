{
  "hooks": {
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/workflow/state-initializer.sh",
            "id": "cai-state-initializer"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": "cai/atdd|acceptance-designer|test-first-developer|solution-architect|business-analyst|user-experience-designer|technical-stakeholder|security-expert|legal-compliance-advisor|atdd-orchestrator",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/workflow/context-isolator.py",
            "id": "cai-context-isolator"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Read",
        "condition": "cai-workflow-active",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/workflow/input-validator.sh",
            "id": "cai-input-validator"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit",
        "condition": "cai-workflow-active",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/workflow/output-monitor.py",
            "id": "cai-output-monitor"
          }
        ]
      },
      {
        "matcher": "Write",
        "condition": "cai-workflow-active",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/workflow/stage-transition.sh",
            "id": "cai-stage-transition"
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/code-quality/lint-format.sh",
            "id": "cai-auto-lint-format",
            "description": "Auto-lint and format source files based on language"
          }
        ]
      }
    ]
  },
  "permissions": {
    "allow": [
      "Bash($HOME/.claude/hooks/**)",
      "Read(docs/craft-ai/**)",
      "Write(docs/craft-ai/**)",
      "Edit(docs/craft-ai/**)",
      "Read(state/craft-ai/**)",
      "Write(state/craft-ai/**)",
      "Read(.claude/agents/cai/**)",
      "Write(state/craft-ai/*.log)",
      "Write(state/craft-ai/*.json)"
    ]
  }
}
