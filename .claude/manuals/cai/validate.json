{
  "command": "/cai:validate",
  "category": "Quality Validation",
  "purpose": "Comprehensive quality validation and compliance checking",
  "synopsis": "/cai:validate [target] --full --security --performance --threshold strict",
  "display": "Quality validation | /cai:validate [target] --full --security --performance",
  "description": "Comprehensive quality validation and compliance checking system that orchestrates specialized validators to ensure code quality, architectural compliance, security standards, and production readiness through systematic validation processes.",
  "arguments": {
    "target": {
      "description": "Validation target (codebase, feature, or specific component)",
      "required": false,
      "type": "string",
      "examples": ["feature-branch", "@src/components", "payment-service"]
    }
  },
  "flags": {
    "--commit-ready": {
      "description": "Validate commit readiness with comprehensive quality gates",
      "type": "boolean",
      "details": "Orchestrates all validators to ensure commit meets quality standards"
    },
    "--architecture": {
      "description": "Focus on architectural compliance validation",
      "type": "boolean",
      "details": "Validates hexagonal architecture, boundaries, and design patterns"
    },
    "--security": {
      "description": "Comprehensive security validation and compliance",
      "type": "boolean",
      "details": "Security standards compliance and vulnerability assessment"
    },
    "--performance": {
      "description": "Performance benchmarks and optimization validation",
      "type": "boolean",
      "details": "Performance validation with benchmark comparison"
    },
    "--coverage": {
      "description": "Test coverage analysis and validation",
      "type": "number",
      "default": 80,
      "details": "Minimum test coverage threshold validation"
    },
    "--mutation": {
      "description": "Mutation testing validation for test effectiveness",
      "type": "boolean",
      "details": "Validates test quality through mutation testing (â‰¥75-80% kill rate)"
    }
  },
  "examples": [
    {
      "command": "/cai:validate --commit-ready",
      "description": "Comprehensive commit readiness validation",
      "context": "Before committing changes to ensure quality standards"
    },
    {
      "command": "/cai:validate payment-service --security --performance",
      "description": "Security and performance validation for critical service",
      "context": "When validating business-critical components"
    },
    {
      "command": "/cai:validate @src/auth --architecture --coverage 90",
      "description": "Architectural compliance with high coverage requirements",
      "context": "When validating architectural boundaries and test quality"
    }
  ],
  "see_also": ["complete", "develop", "refactor", "commit-readiness-coordinator"]
}