{
  "version": "1.0.0",
  "description": "CAI Command Manual System Index",
  "commands": {
    "refactor": {
      "file": "refactor.json",
      "category": "Quality & Enhancement",
      "purpose": "Systematic code refactoring from Level 1-6 or complex Mikado Method",
      "display": "Systematic refactoring | /cai:refactor [target] --level 1-6 --mikado --validate",
      "keywords": ["refactor", "quality", "mikado", "level", "cleanup", "patterns", "solid"],
      "complexity": "high",
      "wave_enabled": true,
      "agents": ["systematic-refactorer", "mikado-refactoring-specialist"]
    },
    "start": {
      "file": "start.json",
      "category": "Workflow Initiation",
      "purpose": "Initialize ATDD workflow with intelligent workflow selection",
      "display": "ATDD workflow initialization | /cai:start [project-description] --methodology atdd --interactive",
      "keywords": ["start", "atdd", "workflow", "initialize", "begin", "setup"],
      "complexity": "medium",
      "wave_enabled": true,
      "agents": ["atdd-wave-coordinator", "workflow-guidance-agent"]
    },
    "develop": {
      "file": "develop.json",
      "category": "Development & Implementation",
      "purpose": "Outside-In TDD implementation of user stories",
      "display": "Outside-In TDD implementation | /cai:develop [story-id] --outside-in --real-system",
      "keywords": ["develop", "tdd", "outside-in", "implementation", "coding", "build"],
      "complexity": "high",
      "wave_enabled": true,
      "agents": ["test-first-developer", "production-service-integrator"]
    },
    "architect": {
      "file": "architect.json",
      "category": "Architecture Design",
      "purpose": "System architecture design and technology decisions",
      "display": "System architecture design | /cai:architect [system-context] --style <type> --focus <domain>",
      "keywords": ["architect", "design", "system", "architecture", "technology", "decisions"],
      "complexity": "high",
      "wave_enabled": true,
      "agents": ["solution-architect", "technology-selector"]
    },
    "discuss": {
      "file": "discuss.json",
      "category": "Requirements Analysis",
      "purpose": "Requirements gathering and stakeholder collaboration",
      "display": "Requirements gathering | /cai:discuss [requirements] --interactive --stakeholders <list>",
      "keywords": ["discuss", "requirements", "stakeholder", "collaboration", "analysis"],
      "complexity": "medium",
      "wave_enabled": true,
      "agents": ["business-analyst", "user-experience-designer", "security-expert"]
    },
    "validate": {
      "file": "validate.json",
      "category": "Quality Validation",
      "purpose": "Comprehensive quality validation and compliance checking",
      "display": "Quality validation | /cai:validate [target] --full --security --performance",
      "keywords": ["validate", "quality", "testing", "compliance", "verification"],
      "complexity": "high",
      "wave_enabled": true,
      "agents": ["commit-readiness-coordinator", "test-execution-validator"]
    },
    "complete": {
      "file": "complete.json",
      "category": "Feature Completion",
      "purpose": "Feature finalization and production readiness validation",
      "display": "Feature completion | /cai:complete [feature] --deploy-ready --comprehensive",
      "keywords": ["complete", "finalize", "production", "ready", "deployment"],
      "complexity": "high",
      "wave_enabled": true,
      "agents": ["feature-completion-coordinator", "production-readiness-helper"]
    },
    "transition": {
      "file": "transition.json",
      "category": "Phase Management",
      "purpose": "Bridge planning phase to execution with context preservation",
      "display": "Phase transition | /cai:transition [phase] --context-preservation --handoff",
      "keywords": ["transition", "phase", "bridge", "context", "preservation"],
      "complexity": "medium",
      "wave_enabled": true,
      "agents": ["phase-transition-manager", "story-context-manager"]
    },
    "help": {
      "file": "help.json",
      "category": "Meta & Orchestration",
      "purpose": "Interactive guidance and agent transformation",
      "display": "Interactive guidance | /cai:help [agent-name] --interactive --workflow-guidance",
      "keywords": ["help", "guidance", "interactive", "agent", "transformation"],
      "complexity": "low",
      "wave_enabled": false,
      "agents": ["workflow-guidance-agent", "interactive-wave-elicitation"]
    },
    "atdd": {
      "file": "atdd.json",
      "category": "ATDD Orchestration",
      "purpose": "Complete ATDD workflow orchestration and management",
      "display": "ATDD workflow orchestration | /cai:atdd [description] --analyze-existing --from-stage <stage>",
      "keywords": ["atdd", "orchestration", "workflow", "management", "coordination"],
      "complexity": "high",
      "wave_enabled": true,
      "agents": ["atdd-cycle-coordinator", "atdd-command-processor"]
    },
    "root-why": {
      "file": "root-why.json",
      "category": "Analysis & Investigation",
      "purpose": "Toyota 5 Whys multi-causal root cause analysis",
      "display": "Root cause analysis | /cai:root-why [problem-description] --systematic --evidence",
      "keywords": ["root", "cause", "analysis", "why", "toyota", "investigation"],
      "complexity": "medium",
      "wave_enabled": false,
      "agents": ["root-cause-analyzer"]
    },
    "skeleton": {
      "file": "skeleton.json",
      "category": "Architecture Validation",
      "purpose": "Walking Skeleton implementation for architecture validation",
      "display": "Walking Skeleton architecture validation | /cai:skeleton [system-description] --minimal --validation",
      "keywords": ["skeleton", "walking", "architecture", "validation", "minimal"],
      "complexity": "medium",
      "wave_enabled": true,
      "agents": ["walking-skeleton-helper"]
    },
    "brownfield": {
      "file": "brownfield.json",
      "category": "Legacy Analysis",
      "purpose": "Brownfield project analysis and technical debt assessment",
      "display": "Legacy analysis & modernization | /cai:brownfield [target] --focus debt --roadmap",
      "keywords": ["brownfield", "legacy", "analysis", "debt", "assessment"],
      "complexity": "high",
      "wave_enabled": true,
      "agents": ["technical-debt-tracker", "systematic-refactorer"]
    },
    "man": {
      "file": "man.json",
      "category": "Meta & Orchestration",
      "purpose": "CAI command manual system with comprehensive documentation access",
      "display": "Command manual system | /cai:man [command] --examples --flags",
      "keywords": ["man", "manual", "documentation", "help", "reference"],
      "complexity": "low",
      "wave_enabled": false,
      "agents": ["mentor", "scribe"]
    }
  },
  "categories": {
    "Requirements Analysis": {
      "description": "Requirements gathering, stakeholder collaboration, and business analysis",
      "commands": ["discuss"],
      "color": "blue",
      "typical_workflow_position": "first"
    },
    "Architecture Design": {
      "description": "System architecture, technology selection, and design decisions",
      "commands": ["architect", "skeleton"],
      "color": "orange",
      "typical_workflow_position": "second"
    },
    "Development & Implementation": {
      "description": "Code implementation, TDD, and feature development",
      "commands": ["develop"],
      "color": "green",
      "typical_workflow_position": "third"
    },
    "Quality & Enhancement": {
      "description": "Code quality, refactoring, and systematic improvements",
      "commands": ["refactor"],
      "color": "yellow",
      "typical_workflow_position": "ongoing"
    },
    "Quality Validation": {
      "description": "Testing, validation, and quality assurance",
      "commands": ["validate"],
      "color": "red",
      "typical_workflow_position": "fourth"
    },
    "Feature Completion": {
      "description": "Feature finalization and production readiness",
      "commands": ["complete"],
      "color": "purple",
      "typical_workflow_position": "fifth"
    },
    "Phase Management": {
      "description": "Workflow transitions and context management",
      "commands": ["transition"],
      "color": "teal",
      "typical_workflow_position": "between"
    },
    "ATDD Orchestration": {
      "description": "Complete ATDD workflow management and coordination",
      "commands": ["atdd", "start"],
      "color": "indigo",
      "typical_workflow_position": "orchestration"
    },
    "Analysis & Investigation": {
      "description": "Problem analysis, root cause investigation, and system understanding",
      "commands": ["root-why"],
      "color": "cyan",
      "typical_workflow_position": "as-needed"
    },
    "Legacy Analysis": {
      "description": "Legacy system analysis and modernization planning",
      "commands": ["brownfield"],
      "color": "brown",
      "typical_workflow_position": "initial"
    },
    "Architecture Validation": {
      "description": "Minimal implementations for architecture risk reduction",
      "commands": ["skeleton"],
      "color": "lime",
      "typical_workflow_position": "early"
    },
    "Meta & Orchestration": {
      "description": "System help, guidance, and command orchestration",
      "commands": ["help", "man"],
      "color": "gray",
      "typical_workflow_position": "any"
    }
  },
  "search_index": {
    "common_terms": {
      "refactor": ["refactor"],
      "tdd": ["develop", "start"],
      "test": ["develop", "validate"],
      "architecture": ["architect", "skeleton"],
      "quality": ["refactor", "validate", "complete"],
      "atdd": ["atdd", "start", "develop"],
      "legacy": ["brownfield", "refactor"],
      "requirements": ["discuss"],
      "help": ["help", "man"],
      "analysis": ["root-why", "brownfield"],
      "workflow": ["start", "atdd", "transition"],
      "validation": ["validate", "complete"],
      "implementation": ["develop"],
      "design": ["architect"],
      "collaboration": ["discuss"],
      "finalize": ["complete"],
      "bridge": ["transition"],
      "guidance": ["help"],
      "orchestration": ["atdd"],
      "investigation": ["root-why"],
      "minimal": ["skeleton"],
      "debt": ["brownfield", "refactor"],
      "manual": ["man"]
    },
    "complexity_levels": {
      "low": ["help", "man"],
      "medium": ["start", "discuss", "transition", "root-why", "skeleton"],
      "high": ["refactor", "develop", "architect", "validate", "complete", "atdd", "brownfield"]
    },
    "wave_enabled": {
      "true": ["refactor", "start", "develop", "architect", "discuss", "validate", "complete", "transition", "atdd", "skeleton", "brownfield"],
      "false": ["help", "root-why", "man"]
    }
  },
  "metadata": {
    "total_commands": 14,
    "last_updated": "2025-01-15",
    "version_history": [
      {
        "version": "1.0.0",
        "date": "2025-01-15",
        "changes": "Initial creation of manual system with documentation extraction"
      }
    ]
  }
}